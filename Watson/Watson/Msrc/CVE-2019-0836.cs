using System.Linq;
using System.Collections.Generic;

namespace Watson.Msrc
{
    internal static class CVE_2019_0836
    {
        private const string name = "CVE-2019-0836";

        public static void Check(VulnerabilityCollection vulnerabilities, string BuildNumber, List<string> installedKBs)
        {
            List<string> Supersedence = new List<string>();

            switch (BuildNumber)
            {
                case "10240":

                    Supersedence.AddRange(new string[] {
                        "4493475", "4498375", "4499154", "4505051", "4503291",
                        "4507458", "4512497", "4517276", "4516070", "4522009",
                        "4520011", "4524153", "4525232", "4530681"
                    });

                    break;

                case "10586":

                    Supersedence.AddRange(new string[] {
                        //
                    });

                    break;

                case "14393":

                    Supersedence.AddRange(new string[] {
                        "4493470", "4493473", "4499418", "4494440", "4499177",
                        "4505052", "4503267", "4503294", "4509475", "4507459",
                        "4507460", "4512495", "4512517", "4516044", "4516061",
                        "4522010", "4519998", "4524152", "4525236", "4530689"
                    });

                    break;

                case "15063":

                    Supersedence.AddRange(new string[] {
                        "4493474", "4493436", "4499162", "4499181", "4502112",
                        "4505055", "4503279", "4503289", "4509476", "4507450",
                        "4507467", "4512474", "4512507", "4516059", "4516068",
                        "4522011", "4520010", "4524151", "4525245", "4530711"
                    });

                    break;

                case "16299":

                    Supersedence.AddRange(new string[] {
                        "4493441", "4493440", "4499147", "4499179", "4505062",
                        "4503281", "4503284", "4509477", "4507455", "4507465",
                        "4512494", "4512516", "4516066", "4516071", "4522012",
                        "4520004", "4524150", "452524", "4530714"
                    });

                    break;

                case "17134":

                    Supersedence.AddRange(new string[] {
                        "4493464", "4493437", "4499167", "4499183", "4505064",
                        "4503286", "4503288", "4509478", "4507435", "4507466",
                        "4512501", "4512509", "4516045", "4516058", "4522014",
                        "4520008", "4524149", "4525237", "B4530717"
                    });

                    break;

                case "17763":

                    Supersedence.AddRange(new string[] {
                        "4493509", "4495667", "4494441", "4497934", "4501835",
                        "4505056", "4501371", "4503327", "4509479", "4505658",
                        "4507469", "4511553", "4512534", "4512578", "4516077",
                        "4522015", "4519338", "4524148", "4523205", "4530715"
                    });

                    break;

                default:
                    return;
            }

            IEnumerable<string> x = Supersedence.Intersect(installedKBs);

            if (!x.Any())
                vulnerabilities.SetAsVulnerable(name);
        }
    }
}